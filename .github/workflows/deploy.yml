name: Deploy to DigitalOcean
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Build client
        run: |
          cd client
          npm install
          npm run build

      - name: Deploy to droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create directory structure
            mkdir -p /root/app/nginx
            mkdir -p /root/app/client/dist

            # Create nginx config
            cat > /root/app/nginx/nginx.conf << 'EOL'
            server {
                listen 80;
                server_name localhost;

                location / {
                    root /usr/share/nginx/html;
                    index index.html;
                    try_files $uri $uri/ /index.html;
                }

                location /api {
                    proxy_pass http://server:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                }

                location /ws {
                    proxy_pass http://server:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "Upgrade";
                    proxy_set_header Host $host;
                }
            }
            EOL

      - name: Copy files to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,server,client/dist"
          target: "/root/app"

      - name: Start services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/app
            docker compose down
            docker compose up -d --build
